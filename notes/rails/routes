1. index, show, new, edit, create, update, destroy
2. GET, POST, PUT, PATCH, DELETE
3. resource routing
resources :photos

GET         /photos             photos#index     display a list of all photos
GET         /photos/new         photos#new       return an HTML form for creating a new photo
POST        /photos             photos#create    create a new photo
GET         /photos/:id         photos#show      display a specific photo
GET         /photos/:id/edit    photos#edit      return an HTML form for editing a photo
PATCH/PUT   /photos/:id         photos#update    update a specific photo
DELETE      /photos/:id         photos#destroy   delete a specific photo

FOUR URLs maps to SEVEN different actions

4. Path and URL helpers
resources :photos

(1) photo_path returns /photos
(2) new_photo_path returns /photos/new
(3) edit_photo_path(:id) returns /photos/:id/edit
(for instance, edit_photo_path(10) returns /photos/10/edit)
(4) photo_path(:id) returns /photos/:id

5. singular resources
get 'profile', to: 'users#show'
get 'profile', action: :show, controller: 'users'

resource :geocoder
resolve('Geocoder') { [:geocoder] }

GET         /geocoder/new      geocoders#new       return an HTML form for creating a new geocoder
POST        /geocoder          geocoders#create    create a new geocoder
GET         /geocoder/         geocoders#show      display the one and only geocoder resource
GET         /geocoder/edit     geocoders#edit      return an HTML form for editing the geocoder
PATCH/PUT   /geocoder/         geocoders#update    update the one and only geocoder resource
DELETE      /geocoder/         geocoders#destroy   delete the geocoder resource

new_geocoder_path returns /geocoder/new
edit_geocoder_path returns /geocoder/edit
geocoder_path returns /geocoder

6. controller namespaces and routing
app/controllers/admin

namespace :admin do
  resources :articles, :comments
end

GET         /admin/articles             admin/articles#index    admin_articles_path
GET         /admin/articles/new         admin/articles#new      new_admin_article_path
POST        /admin/articles             admin/articles#create   admin_articles_path
GET         /admin/articles/:id         admin/articles#show     admin_article_path(:id)
GET         /admin/articles/:id/edit    admin/articles#edit     edit_admin_article_path(:id)
PATCH/PUT   /admin/articles/:id         admin/articles#update   admin_article_path(:id)
DELETE      /admin/articles/:id         admin/articles#destroy  admin_article_path(:id)

7. route /articles to Admin::ArticlesController
scope module: 'admin' do
  resources :articles, :comments
end
或者
resources :articles, module: 'admin'

8. route /admin/articles to ArticlesController without Admin:: module prefix
scope '/admin' do
  resources :articles, :comments
end
或者
resources :articles, path: '/admin/articles'

GET         /admin/photos             photos#index     display a list of all photos
GET         /ammin/photos/new         photos#new       return an HTML form for creating a new photo
POST        /ammin/photos             photos#create    create a new photo
GET         /ammin/photos/:id         photos#show      display a specific photo
GET         /ammin/photos/:id/edit    photos#edit      return an HTML form for editing a photo
PATCH/PUT   /ammin/photos/:id         photos#update    update a specific photo
DELETE      /ammin/photos/:id         photos#destroy   delete a specific photo

9. get '/foo' => '/foo#index'

10. nested resources - Resources should never be nested more than 1 level deep.
class Magzine < ApplicationRecord
   has_many :ads
end

class Ad < ApplicationRecord
   belongs_to :magzine
end

resources :magzines do
   resources :ads
end

GET 	    /magazines/:magazine_id/ads 	        ads#index    	display a list of all ads for a specific magazine
GET 	    /magazines/:magazine_id/ads/new 	    ads#new         return an HTML form for creating a new ad belonging to a specific magazine
POST 	    /magazines/:magazine_id/ads 	        ads#create    	create a new ad belonging to a specific magazine
GET 	    /magazines/:magazine_id/ads/:id 	    ads#show        display a specific ad belonging to a specific magazine
GET 	    /magazines/:magazine_id/ads/:id/edit 	ads#edit        return an HTML form for editing an ad belonging to a specific magazine
PATCH/PUT 	/magazines/:magazine_id/ads/:id 	    ads#update    	update a specific ad belonging to a specific magazine
DELETE 	    /magazines/:magazine_id/ads/:id 	    ads#destroy 	delete a specific ad belonging to a specific magazine

helpers: magzine_ads_url, edit_magzine_ad_path, etc

11. routing concerns
concern :commentable do
  resources :comments
end
 
concern :image_attachable do
  resources :images, only: :index
end

resources :messages, concerns: :commentable
resources :articles, concerns: [:commentable, :image_attachable]
<=>
resources :messages do
  resources :comments
end
 
resources :articles do
  resources :comments
  resources :images, only: :index
end

[ALSO]
namespace :articles do
  concerns :commentable
end

12. shadow nesting
resources :articles do
  resources :comments, only: [:index, :new, :create]
end
resources :comments, only: [:show, :edit, :update, :destroy]
<=>
resources :articles do
  resources :comments, shallow: true
end

resources :articles, shallow: true do
  resources :comments
  resources :quotes
  resources :drafts
end
<=>
shallow do
  resources :articles do
    resources :comments
    resources :quotes
    resources :drafts
  end
end

scope shallow_path: "sekret" do
  resources :articles do
    resources :comments, shallow: true
  end
end

scope shallow_prefix: "sekret" do
  resources :articles do
    resources :comments, shallow: true
  end
end

13. Creating Paths and URLs From Objects

resources :magazines do
  resources :ads
end

magzine_ad_path
<%= link_to 'Ad details', magazine_ad_path(@magazine, @ad) %>
<%= link_to 'Ad details', url_for([@magazine, @ad]) %>
<%= link_to 'Ad details', [@magazine, @ad] %>
<%= link_to 'Magazine details', @magazine %>
<%= link_to 'Edit Ad', [:edit, @magazine, @ad] %>

