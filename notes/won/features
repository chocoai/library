1. sdk
(1) 登录模块
a. 用户账号登录
b. KYC认证: 包括邮箱、手机、住址（或银行账户）、身份证、提交申请
c. 授权: 授权应用可以使用的权限
d. 注册
e. 忘记密码
f. 登出

(2) 用户模块
a. 用户认证
b. 获取用户信息

(3) 虚拟币模块
a. 发送虚拟币: 玩家之间使用虚拟币买装备
b. 发送社区激励: 从开发者社区激励钱包发送一定数量的虚拟币给玩家钱包
c. 开发者获得收入: 从玩家钱包发送一定数量的虚拟币给开发者钱包

(4) 交易所模块
a. 获取交易所信息: 买入卖出、成交价格等
b. 委托买入: 使用某一种货币以指定的价格买入一定数量的另一种货币
c. 委托卖出: 将某种货币以指定的价格卖出，得到一定数量的另外一种货币
d. 获取委托订单及其列表: 包括自己或者所有的买入和卖出的等
e. 取消委托: 可以取消单个或者所有
f. 获取成功交易信息

2. 交易平台
(1) 用户系统
a. 邮箱注册
b. 绑定手机号后，可以用手机号登录
c. 用户授权管理: 用户可以看到授权过的应用列表，可以取消授权
d. 邮箱地址验证
e. 手机号验证
f. KYC实名认证
g. google验证器绑定
h. 忘记密码: 可以通过邮箱或者手机号找回密码

(2) 充值和提现
a. 美元等法定货币根据不同国家实现充值和提现
b. 用户存取虚拟货币流程

(3) 虚拟币交易
a. 比特币交易: 需要有交易所钱包，用户托管钱包
b. 以太币交易: 需要有交易所钱包，用户托管钱包
c. won币交易
d. tpc币交易

3. 开发者后台

4. 框架说明
(1) 以peatio为基础的ruby on rails + mysql + redis + memcached框架，主要用于普通用户在交易平台查看自己的钱包和K线图
(2) 所有API均使用Golang重新定义，并且重新编写，用于提供sdk给游戏开发方使用
(3) 针对开发者方面的平台后台，也需要用Golang全部写，用于开发者申请新游戏、发行新货币等
(4) 钱包app的所有api接口，需要用Golang全部重新定义，并重新编写，用于提供给Android钱包app使用
