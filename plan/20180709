############ 20180611-20180618 ##########
1. beego
(1) routing
(2) orm
(3) calling procedure for each HTTP request

2. db
(1) compare old peatio db and new peatio db

3. oauth2 procedure including login procedure
(1) /login
(2) /register
(3) /v1/oauth2/authorize
(4) /v1/user/login
(5) /v1/user/grants
(6) /v1/oauth2/access_token
(7) /v1/oauth2/xd_proxy_iframe
(8) /v1/user/login_status
(9) /v1/oauth2/xd_proxy
(10) /v1/user/me
(11) /v1/kyc/index
(12) /v1/kyc/send_email
(13) /v1/kyc/send_sms_code
(14) /v1/kyc/check_sms_code

4. php sdk
(1) install
(2) runing

5. js sdk
(1) running

6. KYC procedure

7. new peatio
(1) running
(2) setup-ubuntu.md
(3) install review
(4) ruby & rails knowledge
(5) debugging

############ 20180619-20180625 ##########
Development
1. login
(1) API接口定义 - 更新API.md
(2) DB - 切换新的数据库，检查完整性
(3) 登录页面设计 - 国家、手机号、验证码
(4) Golang API - /login, /v1/login/send_sms_code, /v1/login（删除所有邮箱登录的部分）
(4) PHP & JS SDK
(5) 去掉无用的部分
(6) 学习Active Record，迁移数据库，编写ralis migration脚本
(7) redigo
(8) 学习了RabbitMQ的多种工作模式，RabbitMQ发送sms code
(9) 修改members表的获取逻辑

2. KYC

############ 20180619-20180625 ##########
1. Ethereum学习，搭建了环境，熟悉了相关概念
2. 登录优化KYC等级1: 输入真名、生日、国家
3. 优化accounts表关于currency的处理
4. 多语言框架golang实现完成
5. 添加payments的数据库migration scripts


############ 20180702-20180708 ##########
工作部分
1. 支付 (golang, js, rails)
(1) 流程总结
(2) 目前的代码实现
(3) PIN支付: 设置（包括初次设置和修改）、忘记找回、在支付时使用
(4) server_unique_flag逻辑
(5) 付款要保持出入平衡

2. 手机API接口开发
(1) 整理接口，并且进行分类，统一格式
a. 登录
b. 发送短信验证码
c. 获取用户数据
d. 更新用户数据

e. 显示授权信息
f. 授权信息确认
g. 支付所有接口

(2) 认证方式（包括peatio认证）- jwt (Implementation TODO)

3. paypal（暂时不做）

4. 部署方案

5. KYC接口优化

6. SDK
(1) 了解APP SDK的实现

7. gerrit
############ 20180709-20180715 ##########
工作部分
1. 手机API接口开发
(1) 支付接口 ###
修改现有创建订单的接口，放在tx_id字段里面: CreatePaymentInfo
tx_id修改: 数据库、创建订单时的返回字段、支付确认的传输字段名称
peatio对账平台，1和2账户
item_sku
signature: 三种方式 - 服务端之间主动被动，客户端，需要验证可行性
自己可以给自己转账

a. 获取订单信息
b. 获取账户余额
c. start to pay检查接口
I. 大的超时 II. 异常操作
d. 支付确认

e. 获取充值支付方式列表
f. 账户买入汇率查询
g. 混合支付确认

(2) PIN码支付

2. JWT认证优化 ### 结合Oauth2

3. peatio功能分解
(1) tasks
(2) nodejs充值脚本
(3) daemon
(4) API

4. beego automated api document

5. 修改oauth_access_grants表更新问题 ###

学习部分
1. Won链学习
2. Google公司文化
3. web socket实现代码
4. 指纹支付安全问题

会议纪要
1. 命名规范: client_id, app_uid


会议纪要
1. 命名规范: client_id, app_uid

会议纪要
1. 命名规范: client_id, app_uid
2. 支付宝的找回密码流程
3. won钱包充值和提款
4. KYC认证添加won链钱包地址，调用won链接口
5. 服务器之间的调用
微信的服务器与服务器的通信是,帮商户生成:商户证书.p12, 然后在游戏的服务器端用这个生成相应的证书pem格式，与证书密钥pem格式，然后就可以验证了。
########################################
b) 其次，从游戏服务器端调用过来的API接口，全部加入验证
c) web支付的时候，如果用户还没登录，需要加入登录的流程，如果还没验证KYC l1,需要加入L1资料填入流程。
d) PIN的完整逻辑(初始设置,之后修改PIN,支付使用PIN,）
