############ 20180611-20180618 ##########
1. beego
(1) routing
(2) orm
(3) calling procedure for each HTTP request

2. db
(1) compare old peatio db and new peatio db

3. oauth2 procedure including login procedure
(1) /login
(2) /register
(3) /v1/oauth2/authorize
(4) /v1/user/login
(5) /v1/user/grants
(6) /v1/oauth2/access_token
(7) /v1/oauth2/xd_proxy_iframe
(8) /v1/user/login_status
(9) /v1/oauth2/xd_proxy
(10) /v1/user/me
(11) /v1/kyc/index
(12) /v1/kyc/send_email
(13) /v1/kyc/send_sms_code
(14) /v1/kyc/check_sms_code

4. php sdk
(1) install
(2) runing

5. js sdk
(1) running

6. KYC procedure

7. new peatio
(1) running
(2) setup-ubuntu.md
(3) install review
(4) ruby & rails knowledge
(5) debugging

############ 20180619-20180625 ##########
Development
1. login
(1) API接口定义 - 更新API.md
(2) DB - 切换新的数据库，检查完整性
(3) 登录页面设计 - 国家、手机号、验证码
(4) Golang API - /login, /v1/login/send_sms_code, /v1/login（删除所有邮箱登录的部分）
(4) PHP & JS SDK
(5) 去掉无用的部分
(6) 学习Active Record，迁移数据库，编写ralis migration脚本
(7) redigo
(8) 学习了RabbitMQ的多种工作模式，RabbitMQ发送sms code
(9) 修改members表的获取逻辑

2. KYC

############ 20180619-20180625 ##########
1. Ethereum学习，搭建了环境，熟悉了相关概念
2. 登录优化KYC等级1: 输入真名、生日、国家
3. 优化accounts表关于currency的处理
4. 多语言框架golang实现完成
5. 添加payments的数据库migration scripts


############ 20180702-20180708 ##########
工作部分
1. 支付 (golang, js, rails)
(1) 流程总结
(2) 目前的代码实现
(3) PIN支付: 设置（包括初次设置和修改）、忘记找回、在支付时使用
(4) server_unique_flag逻辑
(5) 付款要保持出入平衡

2. 手机API接口开发
(1) 整理接口，并且进行分类，统一格式
a. 登录
b. 发送短信验证码
c. 获取用户数据
d. 更新用户数据

e. 显示授权信息
f. 授权信息确认 ###
g. 支付所有接口 ###

(2) 认证方式（包括peatio认证）- jwt (Implementation TODO) ###
(3) 获取用户数据接口，同时需要包括根据ip识别国家的功能，下发国家名称和国家代码
(4) 登录接口的Accept-Language

3. paypal

4. 部署方案

5. peatio功能分解
(1) tasks
(2) nodejs充值脚本
(3) daemon
(4) API

6. KYC接口优化

7. SDK
(1) 了解APP SDK的实现

8. beego automated api document ###

9. gerrit

学习部分
1. Won链学习
2. Google公司文化

会议摘要
1. 整理golang手机钱包APP接口
2. 整理peatio手机钱包APP接口
3. 指纹支付安全问题
4. WON UI开发工作
5. Pusher服务: a. golang实现 b. 接入peatio，可能会涉及比较大的改动，目前考虑尝试改配置
########################################

a) 支付订单的id,不能直接返回payments表的自增id.需要一个算法生成id
b) 其次，从游戏服务器端调用过来的API接口，全部加入验证
c) web支付的时候，如果用户还没登录，需要加入登录的流程，如果还没验证KYC l1,需要加入L1资料填入流程。
d) PIN的完整逻辑(初始设置,之后修改PIN,支付使用PIN,）
