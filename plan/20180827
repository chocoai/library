############ 20180611-20180618 ##########
1. beego
(1) routing
(2) orm
(3) calling procedure for each HTTP request

2. db
(1) compare old peatio db and new peatio db

3. oauth2 procedure including login procedure
(1) /login
(2) /register
(3) /v1/oauth2/authorize
(4) /v1/user/login
(5) /v1/user/grants
(6) /v1/oauth2/access_token
(7) /v1/oauth2/xd_proxy_iframe
(8) /v1/user/login_status
(9) /v1/oauth2/xd_proxy
(10) /v1/user/me
(11) /v1/kyc/index
(12) /v1/kyc/send_email
(13) /v1/kyc/send_sms_code
(14) /v1/kyc/check_sms_code

4. php sdk
(1) install
(2) runing

5. js sdk
(1) running

6. KYC procedure

7. new peatio
(1) running
(2) setup-ubuntu.md
(3) install review
(4) ruby & rails knowledge
(5) debugging

############ 20180619-20180625 ##########
Development
1. login
(1) API接口定义 - 更新API.md
(2) DB - 切换新的数据库，检查完整性
(3) 登录页面设计 - 国家、手机号、验证码
(4) Golang API - /login, /v1/login/send_sms_code, /v1/login（删除所有邮箱登录的部分）
(4) PHP & JS SDK
(5) 去掉无用的部分
(6) 学习Active Record，迁移数据库，编写ralis migration脚本
(7) redigo
(8) 学习了RabbitMQ的多种工作模式，RabbitMQ发送sms code
(9) 修改members表的获取逻辑

2. KYC

############ 20180619-20180625 ##########
1. Ethereum学习，搭建了环境，熟悉了相关概念
2. 登录优化KYC等级1: 输入真名、生日、国家
3. 优化accounts表关于currency的处理
4. 多语言框架golang实现完成
5. 添加payments的数据库migration scripts


############ 20180702-20180708 ##########
工作部分
1. 支付 (golang, js, rails)
(1) 流程总结
(2) 目前的代码实现
(3) PIN支付: 设置（包括初次设置和修改）、忘记找回、在支付时使用
(4) server_unique_flag逻辑
(5) 付款要保持出入平衡

2. 手机API接口开发
(1) 整理接口，并且进行分类，统一格式
a. 登录
b. 发送短信验证码
c. 获取用户数据
d. 更新用户数据

e. 显示授权信息
f. 授权信息确认
g. 支付所有接口

(2) 认证方式（包括peatio认证）- jwt (Implementation TODO)

3. paypal（暂时不做）

4. 部署方案

5. KYC接口优化

6. SDK
(1) 了解APP SDK的实现

7. gerrit
############ 20180709-20180715 ##########
工作部分
1. 手机API接口开发
(1) 支付接口
peatio对账平台，1和2账户
item_sku

a. 获取订单信息，包括余额是否充足的信息
b. start to pay检查接口
c. 支付确认

2. JWT认证优化

############ 20180716-20180722 ##########
工作部分
I. golang开发
1. 手机API接口开发
(1) 授权接口优化: a. token唯一性 b. API授权查询接口

2. 修改oauth_access_grants表更新问题
解决方法：去掉了token index

II. peatio
1. rails initialization process
2. rails configuration details

############ 20180723-20180729 ##########
工作部分
I. golang开发
1. 手机API接口开发
(1) peatio与golang之间ip认证
(2) PIN码支付
重置方案：刷脸、手机验证码+身份证、手机验证码+银行卡、手机验证码+个人问题
最终方案：发短信验证码 + 姓名+生日

TODO List
1. 支付宝的找回密码流程（已解决）

############ 20180723-20180729 ##########
学习部分
1. rails views and layouts knowledge
2. grape routing
3. rails active record

############ 20180806-20180812 ##########
工作项
Part I
1. jwt token
2. 游戏服务器与won服务器之间的安全措施 #（需要验证证书的归属）
3. rabbitmq发送短信的消息TTL
4. 指纹支付相关

Part II. 其他
1. 邀请奖励校验(需要帮用户校验，同一款游戏，同一个用户的邀请奖励只能获得一次) # (邀请奖励需要生成订单号)

############ 20180813-20180819 ##########
工作项
Part I
1. 游戏支付的加签规则
2. sdk支付流程
3. 登出功能
4. 提供根据ip地址查询国家信息接口

############ 20180820-20180826 ##########
工作项
Part I
1. rsa
2. sdk支付使用pin
3. 指纹多设备支持

学习部分
1. web socket实现代码

############ 20180827-20180902 ##########
工作项
Part I
1. TPC => TOP
2. 升级策略

Part II. Rails
1. 前端渲染方法
2. 数据库操作

############ 20180903-20180909 ##########
工作项
Part I
1. pin，设置相同的情况
2. 支付回调加签
3. redis error process
4. BTC Should not Be Displayed at The 1st Position in Wealth List
5. peatio升级接口检查返回错误码

学习部分
1. https://docs.google.com/document/d/14rGH34mBS5dwNOw934xYyZXdpTLiUch4tA7w8jozpZI/edit
通过MetaMask或者mytherwallet 使用wonchain
2. 充值提现流程
3. buy/sell流程
4. Admin Operations
5. 交易大厅 - 交易对
6. 后台任务 - rake

TODO List
1. won钱包充值和提款

############ 20180910-20180916 ##########
工作项
Part I
1. rsa
##########2. 游戏服务器与won服务器之间需要验证证书的归属
3. 主动通知游戏服务器支付状态
#####4. payments表合并到bills表，提现充值记录到bills表，peatio订单管理 (包括数据库的表)
#####5. 短信发送方修改 # 目前状态：需要考虑短信的价格信息，短信间隔
6. 提供给游戏服务器top价格接口 # 目前状态：提供了一个假的接口
7. 完成支付的取消退款的API接口（即游戏服务器收到玩家的某笔支付金额后，游戏服务器判断如果当时出现什么问题，可以调用相应的退款接口，进行相应的退款）
8. 游戏支付的事务操作
9. 帮助页面 - fee, help, agreement ## fee已经完成
10. 手机登录模板
#####11 redis cache
#12. refresh token
13. rabbitmq缺陷
#########14. 自己可以给自己转账
#########15. 架构文档

Part II. 其他
#####1. 支付接口start_to_pay: a. 订单大超时 b. 异常操作
#####2. 一口价支付(应该基本已经完成，还缺少量的PIN-code收尾工作)
3. WON这边加入相应的接口支持游戏内拍卖(这个第一版本不实现)
#####4. 协助游戏进行某些唯一性支付校验(即某些游戏内的唯一道具的支付，我们需要协助游戏进行校验，如果某些道具已经给别人购买成功了，这笔支付在支付成功前需要校验)
5. 邀请奖励需要生成订单号 ##### 目前状态：暂停，等待需求确认

学习部分
1. Won链学习
2. Google公司文化
3. angular js
4. nodejs
5. btc/tpc/won K曲线图
6. 提现手续费
7. 挂单 open orders
8. 撮合系统
9. docker deployment for local testing
